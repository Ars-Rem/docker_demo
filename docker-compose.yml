version: "3"
services:
  api:
    extends:
      file: docker-compose.api.yml
      service: api
#    build:
#      context: .
#      dockerfile: ./apps/api/Dockerfile
#    restart: always
#    env_file:
#    - .env.compose
#    container_name: "${NAME}"
#    container_name: api
#    volumes:
#    - ./.env:/opt/app/.env
#    networks:
#    - myNetwork
#    ports:
#    - 3002:3000
#    profiles: ["backend"]
    depends_on:
    - rmq

  app:
    build:
      context: .
      dockerfile: ./apps/app/Dockerfile
    restart: always
    container_name: app
    networks:
    - myNetwork
    ports:
    - 3001:80

  converter:
    build:
      context: .
      dockerfile: ./apps/converter/Dockerfile
    container_name: converter
    volumes:
    - ./.env:/opt/app/.env
    networks:
    - myNetwork
    depends_on:
    - rmq

  rmq:
    image: rabbitmq:3-management
    container_name: rmq
    restart: always
    networks:
    - myNetwork
#    profiles: ["queue"]
    env_file:
    - .env
    environment: 
    - RABBITMQ_DEFAULT_USER=admin
    - RABBITMQ_DEFAULT_PASS=admin
   
networks:
  myNetwork:
    driver: bridge
